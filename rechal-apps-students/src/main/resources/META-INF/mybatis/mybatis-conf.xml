<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
 <configuration>
 	<!-- http://www.mybatis.org/mybatis-3/zh/configuration.html -->
 	<settings>
 		<!-- 
 		SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING
 		 -->
		<!-- 这个配置使全局的映射器启用或禁用缓存。如果它配成false，其余各个Mapper XML文件配成支持cache也没用。 -->
		<setting name="cacheEnabled" value="false" />
		<!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。 -->
		<setting name="aggressiveLazyLoading" value="false" />
		
		<!-- 配置一级缓存 可选值：STATEMENT|SESSION。
		       STATEMENT：相当于禁用了SqlSession级的一级缓存。
		       SESSION：则启用了一级缓存，这时如果要针对某个SQL设置的话也可以在SQL上面配置flushCache="true"属性。（SQL的userCache属性设置的是二级缓存。）
		       建议：强计算型系统(如金融、保险、财务、证券、税务、电商等)都配置为STATEMENT。只有这里设置为STATEMENT，事务隔离级别的配置（@Transactional(isolation=Isolation.READ_COMMITTED)）才会按照你的预期工作。
		       比如：想把mysql的缺省REPEATABLE_READ改为READ_COMMITTED。
		  -->
		<setting name="localCacheScope" value="STATEMENT" />
		<!-- 允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动）。 -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 使用列标签代替列名。不同的驱动在这方便表现不同。参考驱动文档或充分测试两种方法来决定所使用的驱动。 -->
		<setting name="useColumnLabel" value="true" />
		<!-- 设置超时时间，它决定驱动等待一个数据库响应的时间 -->
		<setting name="defaultStatementTimeout" value="25000" />
		<!-- 指定MyBatis如何自动映射列到字段/属性。PARTIAL只会自动映射简单，没有嵌套的结果。FULL会自动映射任意复杂的结果（嵌套的或其他情况） -->
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<!-- 是否使用插入数据后自增主键的值，需要配合keyProperty使用。需要适合的驱动。如果设置为true则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如Derby) -->
		<setting name="useGeneratedKeys" value="true" />
		
		<!-- 配置一级缓存 可选值：STATEMENT|SESSION。
		       STATEMENT：相当于禁用了SqlSession级的一级缓存。
		       SESSION：则启用了一级缓存，这时如果要针对某个SQL设置的话也可以在SQL上面配置flushCache="true"属性。（SQL的userCache属性设置的是二级缓存。）
		       建议：强计算型系统(如金融、保险、财务、证券、税务、电商等)都配置为STATEMENT。只有这里设置为STATEMENT，事务隔离级别的配置（@Transactional(isolation=Isolation.READ_COMMITTED)）才会按照你的预期工作。
		       比如：想把mysql的缺省REPEATABLE_READ改为READ_COMMITTED。
		  -->
		<!-- 将下划线的字段转换为驼峰格式的字段。提示：仅针对返回类型是javabean的情况，对Map无效。实践结论：不实用，转来转去很麻烦，故设置为false。 -->
		<setting name="mapUnderscoreToCamelCase" value="false"/>
		<!-- 当插入对象属性为空时的jdbcType类型，配了次属性则映射的SQL语句里可以省去指定jdbcType类型的麻烦。 -->
		<setting name="jdbcTypeForNull" value="NULL"/>
		<!-- 配合logback.xml使用，解决手工映射SQL日志的输出问题 -->
		<setting name="logImpl" value="SLF4J" />
		<setting name="logPrefix" value="mapper."/>
 	</settings>
 	
 	<!-- 通用别名设置 
	<typeAliases>
		<typeAlias type="com.gitee.myclouds.common.wrapper.impl.HashDto" alias="Dto" />
	</typeAliases>
	-->
	
    <!-- mysql / oracle 
    -->
 	<plugins>
         <plugin interceptor="org.grc.common.mybatis.page.MybatisPageInterceptor">
             <property name="dialect" value="mysql" />
             <property name="pageSqlId" value=".*ByPage" />
         </plugin>
    </plugins>
 </configuration>